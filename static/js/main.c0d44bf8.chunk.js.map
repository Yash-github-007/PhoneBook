{"version":3,"sources":["Redux/actionTypes.js","Redux/reducers.js","Redux/rootReducer.js","components/Nav.jsx","components/Phone.jsx","components/AllContacts.jsx","Redux/actions.js","components/Notification.jsx","components/ContactBook.jsx","components/CreateContact.jsx","components/UpdateContact.jsx","App.js","index.js"],"names":["CREATE_CONTACT","UPDATE_CONTACT","DELETE_CONTACT","GET_CONTACT","initialState","contactBook","id","shortid","generate","name","phone","email","root","combineReducers","reducer","state","type","payload","arr","filter","contact","contacts","map","store","createStore","Nav","to","className","Button","Phone","ContactNumbers","useSelector","useState","number","setNumber","pNumber","e","p","target","innerText","length","includes","join","onClick","alert","pop","AllContacts","dispatch","useDispatch","search","setSearch","actionDiv","setActionDiv","placeholder","onChange","value","onKeyUp","document","querySelectorAll","forEach","ele","uname","parentElement","toLowerCase","style","display","round","size","classList","contains","ActionDiv","Notification","time","setTime","useEffect","setInterval","getTime","d","Date","t","getHours","m","getMinutes","fullTime","ContactBook","tab","setTab","CreateContact","h","useHistory","uInfo","setUInfo","setUserInfo","prev","autoComplete","onSubmit","preventDefault","obj","Object","assign","push","required","UpdateContact","useParams","setName","setPhone","setEmail","getContact","updateContact","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c0d44bf8.chunk.js","sourcesContent":["export const CREATE_CONTACT = 'CREATE_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const GET_CONTACT = 'GET_CONTACT';","import shortid from \"short-id\";\r\nimport { CREATE_CONTACT, GET_CONTACT, UPDATE_CONTACT, DELETE_CONTACT } from \"./actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    contactBook: [\r\n        {\r\n            id: shortid.generate(),\r\n            name: \"Police\",\r\n            phone: \"100\",\r\n            email: \"CityPolice@gmail.com\"\r\n        },\r\n        {\r\n            id: shortid.generate(),\r\n            name: \"Ambulance\",\r\n            phone: \"102\",\r\n            email: \"CityHospital@gmail.com\"\r\n        },\r\n        {\r\n            id: shortid.generate(),\r\n            name: \"Fire Brigade\",\r\n            phone: \"101\",\r\n            email: \"FireStation@gmail.com\"\r\n        },\r\n        {\r\n            id: shortid.generate(),\r\n            name: \"Balance\",\r\n            phone: \"121\",\r\n        },\r\n        {\r\n            id: shortid.generate(),\r\n            name: \"Women Heplline\",\r\n            phone: \"1091\",\r\n            email: \"womenSafetyIndia@gmail.com\"\r\n        },\r\n        {\r\n            id: shortid.generate(),\r\n            name: \"Railway Enquiry\",\r\n            phone: \"139\",\r\n            email: \"IndianRail.gov@gmail.com\"\r\n        },\r\n\r\n    ]\r\n}\r\n\r\nexport const reducer = (state = initialState, { type, payload }) => {\r\n    // console.log(payload)\r\n    switch (type) {\r\n\r\n        case CREATE_CONTACT:\r\n            return { ...state, contactBook: [...state.contactBook, payload] }\r\n\r\n        case GET_CONTACT:\r\n            let arr = state.contactBook.filter(contact => contact.id === payload);\r\n            return { ...state, contact: arr[0] }\r\n\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contactBook.map(contact => contact.id === payload.id ? payload : contact)\r\n            }\r\n\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contactBook: state.contactBook.filter(contact => contact.id !== payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { reducer } from \"./reducers\";\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nconst root = combineReducers({\r\n    reducer\r\n})\r\nconst store = createStore(root)\r\nexport default store","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav>\r\n            <NavLink to=\"/\" className=\"homeLink\">\r\n                <h1 className=\"logo\">Phonebook</h1>\r\n            </NavLink>\r\n            <NavLink to=\"/create\" className=\"create_btn_link\">\r\n                <Button className=\"create_btn\">Create Contact</Button>\r\n            </NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n// import BlockIcon from '@material-ui/icons/Block';\r\n\r\nconst Phone = () => {\r\n    const ContactNumbers = useSelector(state => state.reducer.contactBook)\r\n\r\n    const [number, setNumber] = useState([]);\r\n\r\n    const pNumber = (e) => {\r\n        setNumber(p => {\r\n            return [\r\n                ...p,\r\n                e.target.innerText\r\n            ]\r\n        })\r\n    }\r\n\r\n    const Cut = () => {\r\n        let arr = number;\r\n        if (arr.length >= 1) {\r\n            arr.pop();\r\n            setNumber(() => ([...arr]))\r\n        }\r\n        else setNumber(arr)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"phone_container\">\r\n            {/* getting numbers displayed on screen if found in saved contacts */}\r\n            <ul className=\"search_results\">\r\n                {\r\n                    ContactNumbers.map(contact => {\r\n                        if (number.length >= 1 && contact.phone.includes(number.join(\"\"))) {\r\n                            return (\r\n                                <li>\r\n                                    <p>{contact.name}</p>\r\n                                    <p className=\"search_num\">{contact.phone}</p>\r\n                                </li>\r\n                            )\r\n                        }\r\n                        else return \"\"\r\n                    })\r\n                }\r\n            </ul>\r\n            <div className=\"keypad\">\r\n                <div className=\"display_number\">{number}</div>\r\n                <div className=\"btns\">\r\n                    <Button className=\"num_btn\" onClick={pNumber} >1</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >2</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >3</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >4</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >5</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >6</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >7</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >8</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >9</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >*</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >0</Button>\r\n                    <Button className=\"num_btn\" onClick={pNumber} >#</Button>\r\n                </div>\r\n                <div className=\"call\">\r\n                    <Button className=\"call_btn\" onClick={alert(\"Out Of Reach\")}>\r\n                        <CallIcon />\r\n                    </Button>\r\n                    <Button className=\"cut_btn\" onClick={Cut}>\r\n                        <HighlightOffIcon />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Phone\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../Redux/actions\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Avatar from 'react-avatar';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst AllContacts = ({ contacts }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [actionDiv, setActionDiv] = useState(false);\r\n\r\n    const Search = () => {\r\n        let allContacts = document.querySelectorAll(\".info_name\");\r\n        allContacts.forEach(ele => {\r\n            let uname = ele.innerText;\r\n            let contact = ele.parentElement.parentElement.parentElement.parentElement;\r\n            if (uname.toLowerCase().includes(search.toLowerCase()))\r\n                contact.style.display = \"block\"\r\n            else\r\n                contact.style.display = \"none\"\r\n        })\r\n    }\r\n\r\n    const ActionDiv = (id) => {\r\n        setActionDiv(!actionDiv);\r\n        let className = `${id}_actions`;\r\n        let allActionsDiv = document.querySelectorAll(\".actions\");\r\n        allActionsDiv.forEach(ele => {\r\n            if (ele.classList.contains(className)) {\r\n                ele.style.display = \"block\";\r\n            }\r\n            else {\r\n                ele.style.display = \"none\"\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ul className=\"allContacts_div\">\r\n            {/* search box */}\r\n            <input type=\"search\" id=\"contact_search\" placeholder={`Search Amoung ${contacts.length} Contacts`} onChange={(e) => setSearch(e.target.value)} onKeyUp={Search} value={search} />\r\n            {/* all contacts */}\r\n            {\r\n                contacts.map(contact => {\r\n                    return (\r\n                        <div className=\"wrapper\">\r\n                            <li key={contact.id} className=\"allContact_contact\">\r\n                                <div className=\"info_div_container\">\r\n                                    <div className=\"info_div\">\r\n                                        <Avatar name={contact.name} round={true} size=\"35\" />\r\n                                        <div className=\"info\">\r\n                                            <p className=\"info_name\">{contact.name}</p>\r\n                                            <p className=\"info_phone\">{contact.phone}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button onClick={() => ActionDiv(contact.id)}><InfoIcon className=\"i\" /></Button>\r\n                                </div>\r\n                                <div className={`${contact.id}_actions actions`} style={{ display: \"none\" }}>\r\n                                    <NavLink className=\"actionLink\" to={`update/${contact.id}`}>\r\n                                        <Button>\r\n                                            <EditIcon className=\"actionIcon\" />\r\n                                        </Button>\r\n                                    </NavLink>\r\n                                    <Button onClick={() => dispatch(deleteContact(contact.id))}>\r\n                                        <DeleteIcon className=\"actionIcon\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AllContacts\r\n","import { CREATE_CONTACT, UPDATE_CONTACT, GET_CONTACT, DELETE_CONTACT } from \"./actionTypes\";\r\n\r\nexport const createContact = (contact) => ({\r\n    type: CREATE_CONTACT,\r\n    payload: contact\r\n})\r\n\r\nexport const updateContact = (contact) => ({\r\n    type: UPDATE_CONTACT,\r\n    payload: contact\r\n})\r\n\r\nexport const deleteContact = (id) => ({\r\n    type: DELETE_CONTACT,\r\n    payload: id\r\n})\r\n\r\nexport const getContact = (id) => ({\r\n    type: GET_CONTACT,\r\n    payload: id\r\n})","import React, { useEffect, useState } from 'react'\r\nimport NetworkCellIcon from '@material-ui/icons/NetworkCell';\r\nimport BatteryCharging90Icon from '@material-ui/icons/BatteryCharging90';\r\nimport NetworkWifiIcon from '@material-ui/icons/NetworkWifi';\r\nimport CameraIcon from '@material-ui/icons/Camera';\r\nconst Notification = () => {\r\n    const [time, setTime] = useState();\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            getTime();\r\n        }, 30000);\r\n    }, []);\r\n\r\n    const getTime = () => {\r\n        const d = new Date();\r\n        let t = d.getHours();\r\n        let m = d.getMinutes();\r\n        let fullTime = `${t}:${m}`\r\n        setTime(fullTime)\r\n    }\r\n\r\n    return (\r\n        <header className=\"notification_bar\">\r\n            <section className=\"left\">\r\n                <div className=\"camera\"><CameraIcon /></div>\r\n                <div className=\"time\">{time}</div>\r\n            </section>\r\n            <section className=\"right\">\r\n                <NetworkCellIcon className=\"icon\" />\r\n                <NetworkWifiIcon className=\"icon\" />\r\n                <BatteryCharging90Icon className=\"icon\" />\r\n            </section>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { deleteContact } from \"../Redux/actions\"\r\nimport Phone from \"./Phone\";\r\nimport AllContacts from \"./AllContacts\";\r\nimport Notification from \"./Notification\";\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nconst ContactBook = () => {\r\n\r\n    const [tab, setTab] = useState(false);\r\n    let contacts = useSelector(state => state.reducer.contactBook);\r\n\r\n    return (\r\n        <main className=\"home_container\">\r\n            <Notification />\r\n            <div className=\"tabs\">\r\n                <Button className=\"tab_btn\" onClick={() => setTab(false)} >Phone</Button>\r\n                <Button className=\"tab_btn\" onClick={() => setTab(true)} >Contacts</Button>\r\n            </div>\r\n            {\r\n                tab ?\r\n                    <AllContacts contacts={contacts} /> :\r\n                    <Phone />\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ContactBook\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createContact } from \"../Redux/actions.js\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport shortid from \"short-id\"\r\n\r\nconst CreateContact = () => {\r\n    const dispatch = useDispatch();\r\n    const h = useHistory();\r\n    const [uInfo, setUInfo] = useState({\r\n        name: \"\",\r\n        phone: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    const setUserInfo = (e) => {\r\n        let { name, value } = e.target;\r\n\r\n        setUInfo(prev => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const createNewContact = (e) => {\r\n        e.preventDefault();\r\n        let obj = Object.assign(uInfo, { id: shortid.generate() })\r\n        dispatch(createContact(obj));\r\n        h.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"createContact_div\">\r\n            <form id=\"create_form\" autoComplete=\"off\" onSubmit={createNewContact}>\r\n                <input type=\"text\" placeholder=\"Enter Name\" name=\"name\" required value={uInfo.name} onChange={setUserInfo} />\r\n                <input type=\"text\" placeholder=\"Enter Contact No\" name=\"phone\" required value={uInfo.phone} onChange={setUserInfo} />\r\n                <input type=\"email\" placeholder=\"Enter Email\" name=\"email\" value={uInfo.email} onChange={setUserInfo} />\r\n                <Button className=\"create_btn\" type=\"submit\">Create New Contact <AddIcon /></Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateContact\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getContact, updateContact } from \"../Redux/actions.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst UpdateContact = () => {\r\n    const { id } = useParams();\r\n    const h = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let contact = useSelector(state => state.reducer.contact)\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [phone, setPhone] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (contact != null) {\r\n            setName(contact.name)\r\n            setPhone(contact.phone)\r\n            setEmail(contact.email)\r\n        }\r\n        dispatch(getContact(id));\r\n    }, [contact]);\r\n\r\n    const updateExistingContact = (e) => {\r\n        e.preventDefault();\r\n        let obj = Object.assign(contact, {\r\n            name: name,\r\n            phone: phone,\r\n            email: email\r\n        })\r\n        dispatch(updateContact(obj));\r\n        h.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"createContact_div\">\r\n            <form id=\"create_form\" autoComplete=\"off\" onSubmit={updateExistingContact}>\r\n                <input type=\"text\" placeholder=\"Enter Name\" name=\"name\" required value={name} onChange={e => setName(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"Enter Contact No\" name=\"phone\" required value={phone} onChange={e => setPhone(e.target.value)} />\r\n                <input type=\"email\" placeholder=\"Enter Email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                <Button className=\"create_btn\" type=\"submit\">Update Existing Contact<AddIcon /></Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateContact\r\n\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport Nav from \"./components/Nav\";\nimport ContactBook from \"./components/ContactBook\";\nimport CreateContact from \"./components/CreateContact\";\nimport UpdateContact from \"./components/UpdateContact\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={ContactBook} />\n        <Route exact path=\"/create\" component={CreateContact} />\n        <Route exact path=\"/update/:id\" component={UpdateContact} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from \"./Redux/rootReducer\"\nimport App from \"./App\";\nimport \"./sass/main.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}